sequenceDiagram
    participant Client
    participant pgflow as pgflow SQL Core
    participant PGMQ as PGMQ Queue
    participant Worker as Edge Worker
    participant Handler as Task Handler

    Client->>pgflow: create_flow(...)
    Client->>pgflow: add_step(...)
    Client->>pgflow: start_flow(...)

    activate pgflow
    pgflow->>pgflow: Create run record
    pgflow->>pgflow: Initialize step_states
    pgflow->>pgflow: Create step_tasks for root steps
    pgflow->>PGMQ: Enqueue message for root step task
    pgflow-->>Client: Return run details
    deactivate pgflow

    Worker->>pgflow: poll_for_tasks(...)

    activate pgflow
    pgflow->>PGMQ: Get visible messages
    PGMQ-->>pgflow: Return messages
    pgflow->>pgflow: Increment attempts counter on task
    pgflow->>pgflow: Build step input by combining run input & dependency outputs
    pgflow-->>Worker: Return tasks with metadata and inputs
    deactivate pgflow

    Worker->>Worker: Find handler function for a task

    note right of Worker: Task Execution

    Worker->>Handler: Call handler function with task input

    rect rgb(235, 255, 235)
      note left of Handler: Task succeeds
      activate Handler
      Handler-->>Worker: Return result
      deactivate Handler

      Worker->>pgflow: complete_task(results)

      activate pgflow
      pgflow->>pgflow: Update task status to 'completed'
      pgflow->>PGMQ: Archive message
      pgflow->>pgflow: Update step_state to 'completed'
      pgflow->>pgflow: Check & start dependent steps
      pgflow->>PGMQ: Enqueue messages for ready dependent steps
      pgflow->>pgflow: Decrement remaining_steps counter
      pgflow->>pgflow: If all steps completed, mark run as 'completed'
      pgflow-->>Worker: Confirmation
      deactivate pgflow
    end

    rect rgb(250, 240, 240)
      note left of Handler: Handler throws or exceeds timeout

      activate Handler
      Handler--xWorker: Throw exception or exceeds timeout
      deactivate Handler
      Worker->>pgflow: fail_task(error_message)

      activate pgflow
      pgflow->>pgflow: Check remaining retry attempts

      rect rgb(240, 250, 240)
        note right of pgflow: Retries remaining
        pgflow->>PGMQ: Delay message visibility
        PGMQ->>PGMQ: Message becomes visible
        note right of Worker: Worker attempts execution again
        Worker->>pgflow: poll_for_tasks(...)
      end
      rect rgb(255, 225, 225)
        note right of pgflow: No retries remaining
        pgflow->>pgflow: Mark task as 'failed'
        pgflow->>pgflow: Mark step as 'failed'
        pgflow->>pgflow: Mark run as 'failed'
        pgflow->>PGMQ: Archive message
        note right of pgflow: Permanent failure of a run
      end
      deactivate pgflow
    end
