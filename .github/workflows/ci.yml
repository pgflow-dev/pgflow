name: CI
on:
  pull_request:
    branches: ['**', '!changeset-release/**']
  push:
    branches: ['main']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read
  pull-requests: write       # for preview comments
  deployments: write         # Netlify action needs it

jobs:
# ─────────────────────────────────────── 1. BUILD & TEST ──────────────────────────────────────
  build-and-test:
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: '1.45.2'

      - name: Install sqruff
        uses: quarylabs/install-sqruff-cli-action@main

      - name: Setup Atlas
        uses: ariga/setup-atlas@master
        with:
          cloud-token: ${{ secrets.ATLAS_CLOUD_TOKEN }}

      - name: Set Nx SHAs for affected commands
        uses: nrwl/nx-set-shas@v4

      - name: Quality gate (lint + typecheck + test)
        run: pnpm nx affected -t lint typecheck test --parallel --configuration=production

      - name: Build all affected projects (except playground)
        run: pnpm nx affected -t build --configuration=production --parallel --exclude=playground


# ────────────────────────────────── 2. DEPLOY PLAYGROUND ───────────────────────────
  deploy-playground:
    needs: build-and-test
    if: >-
      ${{
        (github.event_name == 'pull_request') ||
        (github.ref == 'refs/heads/main' && github.event_name == 'push')
      }}
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'pull_request' && 'preview' || 'production' }}
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PLAYGROUND_SITE_ID }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ github.event_name == 'pull_request' && secrets.DEMO_PREVIEW_SUPABASE_URL || secrets.DEMO_PRODUCTION_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ github.event_name == 'pull_request' && secrets.DEMO_PREVIEW_SUPABASE_ANON_KEY || secrets.DEMO_PRODUCTION_SUPABASE_ANON_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      # Build the workspace libraries that the app imports
      - run: pnpm nx run-many -t build --projects client,dsl --configuration=production

      - name: Build & deploy to Netlify
        id: deploy
        run: |
          pnpm netlify deploy --build --filter=playground \
            --context ${{ github.event_name == 'pull_request' && 'deploy-preview' || 'production' }} \
            ${{ github.event_name == 'pull_request' && format('--alias=pr-{0}', github.event.pull_request.number) || '--prod' }}

      - name: Post deployment comment
        if: always()
        uses: ./.github/actions/deployment-comment
        with:
          project-name: Playground
          preview-url: https://pr-${{ github.event.pull_request.number }}--pgflow-demo.netlify.app
          production-url: https://playground.pgflow.dev

# ────────────────────────────────── 3. DEPLOY WEBSITE ───────────────────────────
  deploy-website:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'pull_request' && 'preview' || 'production' }}
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      - name: Set Nx SHAs for affected commands
        uses: nrwl/nx-set-shas@v4
      
      - name: Check if website is affected
        id: check-affected
        run: |
          if pnpm nx show projects --affected -t build | grep -q "^website$"; then
            echo "affected=true" >> $GITHUB_OUTPUT
            echo "Website is affected by changes"
          else
            echo "affected=false" >> $GITHUB_OUTPUT
            echo "Website is not affected by changes - skipping deployment"
          fi
      
      - name: Deploy website
        id: deploy-website
        if: steps.check-affected.outputs.affected == 'true'
        env:
          CLOUDFLARE_BRANCH: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || '' }}
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            pnpm nx run website:deploy:preview --skip-nx-cache
          else
            pnpm nx run website:deploy --skip-nx-cache
          fi

      - name: Post deployment comment
        if: always()
        uses: ./.github/actions/deployment-comment
        with:
          project-name: Website
          preview-url: https://pr-${{ github.event.pull_request.number }}.pgflow.pages.dev
          production-url: https://pgflow.dev

