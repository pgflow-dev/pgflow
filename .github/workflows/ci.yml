name: CI
on:
  pull_request:
    branches: ['**', '!changeset-release/**']
  push:
    branches: ['main']

permissions:
  contents: read
  actions: read
  pull-requests: write       # for preview comments
  deployments: write         # Netlify action needs it

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  CLOUDFLARE_API_TOKEN:     ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID:    ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

jobs:
# ─────────────────────────────────────── 1. BUILD ──────────────────────────────────────
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: pnpm/action-setup@v4
        with: { version: '8.14.1' }

      # Cache pnpm store
      - uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store/v3
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: '1.45.2'

      - name: Install sqruff
        uses: quarylabs/install-sqruff-cli-action@main

      - name: Setup Atlas
        uses: ariga/setup-atlas@master
        with:
          cloud-token: ${{ secrets.ATLAS_CLOUD_TOKEN }}

      - name: Start Nx Cloud run
        run: .github/scripts/nx-cloud.sh start

      - run: pnpm install --frozen-lockfile

      - name: Set Nx SHAs for affected commands
        uses: nrwl/nx-set-shas@v4

      - name: Quality gate (lint + typecheck + test)
        run: pnpm nx affected -t lint typecheck test --parallel --configuration=production

      - name: Build all affected projects
        run: pnpm nx affected -t build --configuration=production --parallel

      # ── playground extra build with env vars ────────────────────────────────────────
      - name: Build playground (preview)
        id: build_playground_preview
        if: github.event_name == 'pull_request'
        run: |
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.DEMO_PREVIEW_SUPABASE_URL }} \
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.DEMO_PREVIEW_SUPABASE_ANON_KEY }} \
          pnpm nx run playground:build
      - name: Build playground (production)
        id: build_playground_production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.DEMO_PRODUCTION_SUPABASE_URL }} \
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.DEMO_PRODUCTION_SUPABASE_ANON_KEY }} \
          pnpm nx run playground:build

      - name: Upload playground artifact
        if: github.event_name == 'pull_request' && steps.build_playground_preview.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: playground-dist
          path: examples/playground/.next
          retention-days: 7

      - name: Upload playground artifact (production)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.build_playground_production.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: playground-dist
          path: examples/playground/.next
          retention-days: 7

      - name: Stop Nx Cloud run
        run: .github/scripts/nx-cloud.sh stop

# ────────────────────────────────── 2. PREVIEW DEPLOYS (PR) ───────────────────────────
  deploy-preview-playground:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID:    ${{ secrets.NETLIFY_PLAYGROUND_SITE_ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            examples/playground/netlify.toml
          sparse-checkout-cone-mode: false

      - uses: actions/download-artifact@v4
        with: { name: playground-dist, path: examples/playground/.next }

      - run: |
          pnpm dlx netlify-cli@latest deploy \
            --dir=examples/playground \
            --alias=pr-${{ github.event.pull_request.number }} \
            --message="PR #${{ github.event.pull_request.number }}" \
            --functions=examples/playground/.netlify/functions \
            --site=$NETLIFY_SITE_ID
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  deploy-preview-website:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: preview
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: '8.14.1' }
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm nx run website:deploy:preview --skip-nx-cache

# ──────────────────────────────── 3. PRODUCTION DEPLOYS (main) ────────────────────────
  deploy-production-playground:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID:    ${{ secrets.NETLIFY_PLAYGROUND_SITE_ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            examples/playground/netlify.toml
          sparse-checkout-cone-mode: false

      - uses: actions/download-artifact@v4
        with: { name: playground-dist, path: examples/playground/.next }

      # Production deploy
      - run: |
          pnpm dlx netlify-cli@latest deploy \
            --prod \
            --dir=examples/playground \
            --message="Deploy from GitHub Actions (main)" \
            --functions=examples/playground/.netlify/functions \
            --site=$NETLIFY_SITE_ID
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  deploy-production-website:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: '8.14.1' }
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm nx run website:deploy --skip-nx-cache