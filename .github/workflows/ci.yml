name: CI
on:
  pull_request:
    branches: ['**', '!changeset-release/**']
  push:
    branches: ['main']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read
  pull-requests: write       # for preview comments
  deployments: write         # Netlify action needs it

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  CLOUDFLARE_API_TOKEN:     ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID:    ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

jobs:
# ─────────────────────────────────────── 1. BUILD & TEST ──────────────────────────────────────
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: pnpm/action-setup@v4
        with: 
          version: '8.14.1'
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: '1.45.2'

      - name: Install sqruff
        uses: quarylabs/install-sqruff-cli-action@main

      - name: Setup Atlas
        uses: ariga/setup-atlas@master
        with:
          cloud-token: ${{ secrets.ATLAS_CLOUD_TOKEN }}

      - run: pnpm install --frozen-lockfile --prefer-offline

      - name: Set Nx SHAs for affected commands
        uses: nrwl/nx-set-shas@v4

      - name: Quality gate (lint + typecheck + test)
        run: pnpm nx affected -t lint typecheck test --parallel --configuration=production

      - name: Build all affected projects (except playground)
        run: pnpm nx affected -t build --configuration=production --parallel --exclude=playground


# ────────────────────────────────── 2. DEPLOY PLAYGROUND ───────────────────────────
  deploy-playground:
    needs: build-and-test
    # Run for PRs (preview) and main branch (production)
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) ||
      (github.ref == 'refs/heads/main' && github.event_name == 'push')
    runs-on: ubuntu-latest
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PLAYGROUND_SITE_ID }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: pnpm/action-setup@v4
        with:
          version: '8.14.1'
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile --prefer-offline

      - name: Set Nx SHAs for affected commands
        uses: nrwl/nx-set-shas@v4

      - name: Check if playground is affected
        id: check_affected
        run: |
          if pnpm nx show projects --affected --plain | grep -qx "playground"; then
            echo "affected=true" >> $GITHUB_OUTPUT
          else
            echo "affected=false" >> $GITHUB_OUTPUT
          fi

      - name: Build dependencies
        if: steps.check_affected.outputs.affected == 'true'
        run: pnpm nx run-many -t build --projects client,dsl --configuration=production

      - name: Build playground with Netlify
        if: steps.check_affected.outputs.affected == 'true'
        env:
          NETLIFY_CONTEXT: ${{ github.event_name == 'pull_request' && 'deploy-preview' || 'production' }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ github.event_name == 'pull_request' && secrets.DEMO_PREVIEW_SUPABASE_URL || secrets.DEMO_PRODUCTION_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ github.event_name == 'pull_request' && secrets.DEMO_PREVIEW_SUPABASE_ANON_KEY || secrets.DEMO_PRODUCTION_SUPABASE_ANON_KEY }}
        run: pnpm netlify build --context $NETLIFY_CONTEXT

      - name: Deploy to Netlify
        if: steps.check_affected.outputs.affected == 'true'
        run: |
          pnpm netlify deploy \
            --dir=.netlify \
            --functions=.netlify/functions \
            --filter examples/playground \
            ${{ github.event_name == 'pull_request' 
                && format('--alias={0}', github.event.pull_request.head.sha) 
                || '--prod' }}

# ────────────────────────────────── 3. DEPLOY WEBSITE ───────────────────────────
  deploy-website:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'pull_request' && 'preview' || 'production' }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: '8.14.1' }
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile --prefer-offline
      - name: Deploy website
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            pnpm nx run website:deploy:preview --skip-nx-cache
          else
            pnpm nx run website:deploy --skip-nx-cache
          fi

