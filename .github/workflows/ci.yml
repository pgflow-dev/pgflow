# CI workflow - build and deploy pattern
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
      - '!changeset-release/**'

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

permissions:
  actions: read
  contents: read

jobs:
  # ────────── 1. BUILD ──────────
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '8.14.1'

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - name: Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'pnpm'

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: '1.45.2'

      - name: Install sqruff
        uses: quarylabs/install-sqruff-cli-action@main

      - name: Setup Atlas
        uses: ariga/setup-atlas@master
        with:
          cloud-token: ${{ secrets.ATLAS_CLOUD_TOKEN }}

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Set Nx SHAs for affected commands
        uses: nrwl/nx-set-shas@v4

      - name: 🚀 Run Nx affected (lint, typecheck, test, build)
        run: pnpm exec nx affected -t lint typecheck test build

  # ────────── 2. DEPLOY PREVIEW (Pull Requests) ──────────
  deploy-preview:
    name: 'Deploy: Preview'
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # allow writing PR comments
    environment: preview
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '8.14.1'

      - name: Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy Preview for website
        run: pnpm exec nx run website:deploy:preview
        env:
          CLOUDFLARE_BRANCH: pr-${{ github.event.pull_request.number }}

      - name: Comment deployment status on PR
        if: always()
        uses: mshick/add-pr-comment@v2
        with:
          message-id: preview-deployment-website
          refresh-message-position: true
          message-success: |
            ## 🔍 Preview Deployment: website
            
            ✅ **Deployment successful!**
            
            🔗 **Preview URL**: https://pr-${{ github.event.pull_request.number }}.pgflow.pages.dev
            
            📝 **Details**:
            - Site: `website`
            - PR: #${{ github.event.pull_request.number }}
            - Branch: `${{ github.head_ref }}`
            - Workflow: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            _Last updated: ${{ github.event.head_commit.timestamp }}_
          message-failure: |
            ## 🔍 Preview Deployment: website
            
            ❌ **Deployment failed!**
            
            📝 **Details**:
            - Site: `website`
            - PR: #${{ github.event.pull_request.number }}
            - Branch: `${{ github.head_ref }}`
            - Error: Check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            _Last updated: ${{ github.event.head_commit.timestamp }}_

  # ────────── 3. DEPLOY PRODUCTION (Main branch) ──────────
  deploy-production:
    name: 'Deploy: PRODUCTION'
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production # enables manual approval & secret scoping
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '8.14.1'

      - name: Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy website to Production
        run: pnpm exec nx run website:deploy

      # Production deployment notification could be added here if needed
      # For example, posting to a Slack channel or creating a GitHub release
