name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
      - '!changeset-release/**'

permissions:
  actions: read
  contents: read

jobs:
  # First job handles all cacheable tasks (lint, typecheck, builds)
  cacheable:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '8.14.1'

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      - name: Nx - start cloud run
        run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'pnpm'

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: '1.45.2'

      - name: Install sqruff
        uses: quarylabs/install-sqruff-cli-action@main

      - name: Install Atlas
        uses: ariga/setup-atlas@master

      - name: Install NPM Dependencies
        run: pnpm install --frozen-lockfile

      - name: Nx - capture commits SHAs
        uses: nrwl/nx-set-shas@v4

      # Run only cacheable targets with affected
      # Skip non-cacheable build targets: playground:build, edge-worker:build, targets with DB dependencies
      - name: Run cacheable affected targets
        run: |
          pnpm exec nx affected -t lint typecheck
          pnpm exec nx affected -t build --exclude=playground,edge-worker,core:gen-types,core:verify-migrations

  # Second job handles database-dependent tests
  db-tests:
    runs-on: ubuntu-latest
    needs: cacheable
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '8.14.1'

      # Cache node_modules
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'pnpm'

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: '1.45.2'

      - name: Install NPM Dependencies
        run: pnpm install --frozen-lockfile

      - name: Nx - capture commits SHAs
        uses: nrwl/nx-set-shas@v4

      # Run build tasks that require database access first
      - name: Run DB-dependent builds
        run: pnpm exec nx affected -t build --projects=playground,edge-worker,core

      # Run all tests (now that builds are complete)
      - name: Run all tests
        run: pnpm exec nx affected -t test
